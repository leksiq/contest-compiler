!/***********************************************/
__SPACE__
!/*!Please, Don't change or delete this comment!*/
__SPACE__
!/*  $script$:ir,n,m/{n;{2;la[]/}/}/{m;il,r1/}  */
__SPACE__
!/***********************************************/
__SPACE__
?import
__SPACE__
?java
!.
?io
!.
?IOException
!;
__SPACE__
?import
__SPACE__
?java
!.
?util
!.
?Arrays
!;
__SPACE__
?import
__SPACE__
?java
!.
?util
!.
?List
!;
__SPACE__
?import
__SPACE__
?java
!.
?util
!.
?stream
!.
?Collectors
!;
__SPACE__
?import
__SPACE__
?java
!.
?util
!.
?stream
!.
?IntStream
!;
__SPACE__
?import
__SPACE__
?static
__SPACE__
?net
!.
?leksi
!.
?algo
!.
?Datas
!.
?join
!;
__SPACE__
?import
__SPACE__
?net
!.
?leksi
!.
?algo
!.
?segtree
!.
?Driver
!;
__SPACE__
?import
__SPACE__
?net
!.
?leksi
!.
?contest
!.
?Solver
!;
__SPACE__
?public
__SPACE__
?class
__SPACE__
?B5
__SPACE__
?extends
__SPACE__
?Solver
__SPACE__
!{
__SPACE__
?public
__SPACE__
?B5
!(
!)
__SPACE__
!{
__SPACE__
?singleTest
__SPACE__
!=
__SPACE__
?true
!;
__SPACE__
!/*+Preprocess-DONOTCOPY*/
__SPACE__
?localNameIn
__SPACE__
!=
__SPACE__
!"in/B.in"
!;
__SPACE__
?localMultiTest
__SPACE__
!=
__SPACE__
?true
!;
__SPACE__
!//        doNotPreprocess = true;
__SPACE__
!//        localRunTester=100;
__SPACE__
!/*-Preprocess-DONOTCOPY*/
__SPACE__
!}
__SPACE__
?interface
__SPACE__
?Mul
__SPACE__
!{
__SPACE__
?void
__SPACE__
?mul
!(
?final
__SPACE__
?int
__SPACE__
?target
!,
__SPACE__
?final
__SPACE__
?int
__SPACE__
?left
!,
__SPACE__
?final
__SPACE__
?int
__SPACE__
?right
!)
!;
__SPACE__
!}
__SPACE__
?interface
__SPACE__
?Cal
__SPACE__
!{
__SPACE__
?void
__SPACE__
?calc
!(
?final
__SPACE__
?int
__SPACE__
?pos
!)
!;
__SPACE__
!}
__SPACE__
?class
__SPACE__
?Calc
__SPACE__
!{
__SPACE__
?Mul
__SPACE__
?mul
!;
__SPACE__
?Cal
__SPACE__
?cal
!;
__SPACE__
!}
__SPACE__
?@Override
__SPACE__
?public
__SPACE__
?void
__SPACE__
?solve
!(
!)
__SPACE__
?throws
__SPACE__
?IOException
__SPACE__
!{
__SPACE__
!//        int[] rnm = Arrays.stream(bis.readLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();
__SPACE__
!//        long r = (long)rnm[0];
__SPACE__
!//        int n = rnm[1];
__SPACE__
!//        int m = rnm[2];
__SPACE__
?int
__SPACE__
?r
__SPACE__
!=
__SPACE__
?sc
!.
?nextInt
!(
!)
!;
__SPACE__
?int
__SPACE__
?n
__SPACE__
!=
__SPACE__
?sc
!.
?nextInt
!(
!)
!;
__SPACE__
?int
__SPACE__
?m
__SPACE__
!=
__SPACE__
?sc
!.
?nextInt
!(
!)
!;
__SPACE__
!//        out.println(r + " " + n + " " + m);
__SPACE__
?sc
!.
?nextLine
!(
!)
!;
__SPACE__
!/**************************/
__SPACE__
!/* Write your code below. */
__SPACE__
!/*vvvvvvvvvvvvvvvvvvvvvvvv*/
__SPACE__
?Driver
__SPACE__
?dr
__SPACE__
!=
__SPACE__
?new
__SPACE__
?Driver
!(
!)
!;
__SPACE__
?dr
!.
?configure
!(
?n
!)
!;
__SPACE__
!//        dr.printTree(out);
__SPACE__
?long
![
!]
__SPACE__
?matrix
__SPACE__
!=
__SPACE__
?new
__SPACE__
?long
![
!(
?dr
!.
?getTreeSize
!(
!)
__SPACE__
!+
__SPACE__
?2
!)
__SPACE__
!<<
__SPACE__
?2
!]
!;
__SPACE__
?boolean
![
!]
__SPACE__
?valid
__SPACE__
!=
__SPACE__
?new
__SPACE__
?boolean
![
?dr
!.
?getTreeSize
!(
!)
__SPACE__
!<<
__SPACE__
?2
!]
!;
__SPACE__
?Calc
__SPACE__
?calc
__SPACE__
!=
__SPACE__
?new
__SPACE__
?Calc
!(
!)
!;
__SPACE__
?calc
!.
?mul
__SPACE__
!=
__SPACE__
!(
?p
!,
__SPACE__
?l
!,
__SPACE__
?r1
!)
__SPACE__
!->
__SPACE__
!{
__SPACE__
?matrix
![
?p
!]
__SPACE__
!=
__SPACE__
!(
?matrix
![
?l
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
!]
__SPACE__
!+
__SPACE__
?matrix
![
?l
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?2
!]
!)
__SPACE__
!%
__SPACE__
?r
!;
__SPACE__
?matrix
![
?p
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!=
__SPACE__
!(
?matrix
![
?l
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!+
__SPACE__
?matrix
![
?l
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?3
!]
!)
__SPACE__
!%
__SPACE__
?r
!;
__SPACE__
?matrix
![
?p
__SPACE__
!+
__SPACE__
?2
!]
__SPACE__
!=
__SPACE__
!(
?matrix
![
?l
__SPACE__
!+
__SPACE__
?2
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
!]
__SPACE__
!+
__SPACE__
?matrix
![
?l
__SPACE__
!+
__SPACE__
?3
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?2
!]
!)
__SPACE__
!%
__SPACE__
?r
!;
__SPACE__
?matrix
![
?p
__SPACE__
!+
__SPACE__
?3
!]
__SPACE__
!=
__SPACE__
!(
?matrix
![
?l
__SPACE__
!+
__SPACE__
?2
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!+
__SPACE__
?matrix
![
?l
__SPACE__
!+
__SPACE__
?3
!]
__SPACE__
!*
__SPACE__
?matrix
![
?r1
__SPACE__
!+
__SPACE__
?3
!]
!)
__SPACE__
!%
__SPACE__
?r
!;
__SPACE__
!}
!;
__SPACE__
?calc
!.
?cal
__SPACE__
!=
__SPACE__
!(
?pos
!)
__SPACE__
!->
__SPACE__
!{
__SPACE__
?if
!(
!!
?valid
![
?pos
!]
!)
__SPACE__
!{
__SPACE__
?int
__SPACE__
?left
__SPACE__
!=
__SPACE__
!(
?pos
__SPACE__
!<<
__SPACE__
?1
!)
__SPACE__
!+
__SPACE__
?4
!;
__SPACE__
?int
__SPACE__
?right
__SPACE__
!=
__SPACE__
?left
__SPACE__
!+
__SPACE__
?4
!;
__SPACE__
?calc
!.
?cal
!.
?calc
!(
?left
!)
!;
__SPACE__
?calc
!.
?cal
!.
?calc
!(
?right
!)
!;
__SPACE__
?calc
!.
?mul
!.
?mul
!(
?pos
!,
__SPACE__
?left
!,
__SPACE__
?right
!)
!;
__SPACE__
?valid
![
?pos
!]
__SPACE__
!=
__SPACE__
?true
!;
__SPACE__
!}
__SPACE__
!}
!;
__SPACE__
?dr
!.
?init
!(
!(
?i
!,
__SPACE__
?p
!)
__SPACE__
!->
__SPACE__
!{
__SPACE__
?int
__SPACE__
?pos
__SPACE__
!=
__SPACE__
?p
__SPACE__
!<<
__SPACE__
?2
!;
__SPACE__
?valid
![
?pos
!]
__SPACE__
!=
__SPACE__
?true
!;
__SPACE__
?matrix
![
?pos
!]
__SPACE__
!=
__SPACE__
?sc
!.
?nextLong
!(
!)
!;
__SPACE__
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?1
!]
__SPACE__
!=
__SPACE__
?sc
!.
?nextLong
!(
!)
!;
__SPACE__
?sc
!.
?nextLine
!(
!)
!;
__SPACE__
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?2
!]
__SPACE__
!=
__SPACE__
?sc
!.
?nextLong
!(
!)
!;
__SPACE__
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?3
!]
__SPACE__
!=
__SPACE__
?sc
!.
?nextLong
!(
!)
!;
__SPACE__
?sc
!.
?nextLine
!(
!)
!;
__SPACE__
?sc
!.
?nextLine
!(
!)
!;
__SPACE__
!}
!)
!;
__SPACE__
!//        out.println(join(valid));
__SPACE__
!//        if(true)return;
__SPACE__
?dr
!.
?setUpdater
!(
!(
?ty
!,
__SPACE__
?t
!,
__SPACE__
?sl
!,
__SPACE__
?sr
!)
__SPACE__
!->
__SPACE__
!{
__SPACE__
?calc
!.
?mul
!.
?mul
!(
?t
__SPACE__
!<<
__SPACE__
?2
!,
__SPACE__
?sl
__SPACE__
!<<
__SPACE__
?2
!,
__SPACE__
?sr
__SPACE__
!<<
__SPACE__
?2
!)
!;
__SPACE__
!}
!)
!;
__SPACE__
?dr
!.
?setGetter
!(
?p
__SPACE__
!->
__SPACE__
!{
__SPACE__
?calc
!.
?cal
!.
?calc
!(
?p
__SPACE__
!<<
__SPACE__
?2
!)
!;
__SPACE__
!}
!)
!;
__SPACE__
!/**************************/
__SPACE__
!/* Write your code below. */
__SPACE__
!/*vvvvvvvvvvvvvvvvvvvvvvvv*/
__SPACE__
!/*^^^^^^^^^^^^^^^^^^^^^^^^*/
__SPACE__
?for
!(
?int
__SPACE__
?$i3
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?$i3
__SPACE__
!<
__SPACE__
?m
!;
__SPACE__
?$i3
!++
!)
__SPACE__
!{
__SPACE__
!//            int[] lr = Arrays.stream(bis.readLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();
__SPACE__
?int
__SPACE__
?l
__SPACE__
!=
__SPACE__
?sc
!.
?nextInt
!(
!)
!;
__SPACE__
?int
__SPACE__
?r1
__SPACE__
!=
__SPACE__
?sc
!.
?nextInt
!(
!)
!;
__SPACE__
!//            sc.nextLine();
__SPACE__
!/**************************/
__SPACE__
!/* Write your code below. */
__SPACE__
!/*vvvvvvvvvvvvvvvvvvvvvvvv*/
__SPACE__
!//            System.out.println("get: " + l + " " + r1);
__SPACE__
?int
__SPACE__
?res
__SPACE__
!=
__SPACE__
?dr
!.
?get
!(
?l
__SPACE__
!-
__SPACE__
?1
!,
__SPACE__
?r1
!)
!;
__SPACE__
!//            int res = dr.get(lr[0] - 1, lr[1]);
__SPACE__
!//            System.out.println("res: " + res);
__SPACE__
?int
__SPACE__
?pos
__SPACE__
!=
__SPACE__
?res
__SPACE__
!<<
__SPACE__
?2
!;
__SPACE__
?if
!(
?res
__SPACE__
!<
__SPACE__
?dr
!.
?getTreeSize
!(
!)
!)
__SPACE__
!{
__SPACE__
?calc
!.
?cal
!.
?calc
!(
?pos
!)
!;
__SPACE__
!}
__SPACE__
?pw
!.
?println
!(
?matrix
![
?pos
!]
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?1
!]
!)
!;
__SPACE__
?pw
!.
?println
!(
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?2
!]
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?matrix
![
?pos
__SPACE__
!+
__SPACE__
?3
!]
!)
!;
__SPACE__
?pw
!.
?println
!(
!)
!;
__SPACE__
!/*^^^^^^^^^^^^^^^^^^^^^^^^*/
__SPACE__
!}
__SPACE__
!/**************************/
__SPACE__
!/* Write your code below. */
__SPACE__
!/*vvvvvvvvvvvvvvvvvvvvvvvv*/
__SPACE__
!/*^^^^^^^^^^^^^^^^^^^^^^^^*/
__SPACE__
!}
__SPACE__
!/*+Preprocess-DONOTCOPY*/
__SPACE__
?static
__SPACE__
?class
__SPACE__
?TesterInput
__SPACE__
!{
__SPACE__
?int
__SPACE__
?n
!;
__SPACE__
?int
__SPACE__
?r
!;
__SPACE__
?int
__SPACE__
?m
!;
__SPACE__
?long
![
!]
![
!]
![
!]
__SPACE__
?a
!;
__SPACE__
?int
![
!]
![
!]
__SPACE__
?lr
!;
__SPACE__
?@Override
__SPACE__
?public
__SPACE__
?String
__SPACE__
?toString
!(
!)
__SPACE__
!{
__SPACE__
?return
__SPACE__
?r
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?n
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?m
__SPACE__
!+
__SPACE__
!"\n"
__SPACE__
!+
__SPACE__
?Arrays
!.
?stream
!(
?a
!)
!.
?map
!(
?v
__SPACE__
!->
__SPACE__
?Arrays
!.
?stream
!(
?v
!)
!.
?map
!(
?v1
__SPACE__
!->
__SPACE__
?join
!(
?v1
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n"
!)
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n\n"
!,
__SPACE__
!""
!,
__SPACE__
!"\n\n"
!)
!)
__SPACE__
!+
__SPACE__
?Arrays
!.
?stream
!(
?lr
!)
!.
?map
!(
?v
__SPACE__
!->
__SPACE__
?join
!(
?v
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n"
!)
!)
!;
__SPACE__
!}
__SPACE__
!}
__SPACE__
?@Override
__SPACE__
?protected
__SPACE__
?Object
__SPACE__
?test_input
!(
!)
__SPACE__
!{
__SPACE__
?TesterInput
__SPACE__
?res
__SPACE__
!=
__SPACE__
?new
__SPACE__
?TesterInput
!(
!)
!;
__SPACE__
?res
!.
?r
__SPACE__
!=
__SPACE__
?getRandomInt
!(
?1
!,
__SPACE__
?10
!)
!;
__SPACE__
?res
!.
?n
__SPACE__
!=
__SPACE__
?getRandomInt
!(
?1
!,
__SPACE__
?10
!)
!;
__SPACE__
?res
!.
?m
__SPACE__
!=
__SPACE__
?4
!;
__SPACE__
?res
!.
?a
__SPACE__
!=
__SPACE__
?new
__SPACE__
?long
![
?res
!.
?n
!]
![
?2
!]
![
?2
!]
!;
__SPACE__
?res
!.
?lr
__SPACE__
!=
__SPACE__
?new
__SPACE__
?int
![
?res
!.
?m
!]
![
?2
!]
!;
__SPACE__
?tps
!.
?println
!(
?res
!.
?r
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?res
!.
?n
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?res
!.
?m
!)
!;
__SPACE__
?for
!(
?int
__SPACE__
?i
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?i
__SPACE__
!<
__SPACE__
?res
!.
?n
!;
__SPACE__
?i
!++
!)
__SPACE__
!{
__SPACE__
?res
!.
?a
![
?i
!]
![
?0
!]
![
?0
!]
__SPACE__
!=
__SPACE__
?getRandomLong
!(
?0
!,
__SPACE__
?100
!)
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?0
!]
![
?1
!]
__SPACE__
!=
__SPACE__
?getRandomLong
!(
?0
!,
__SPACE__
?100
!)
!;
__SPACE__
?tps
!.
?println
!(
?join
!(
?res
!.
?a
![
?i
!]
![
?0
!]
!)
!)
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?0
!]
![
?0
!]
__SPACE__
!%=
__SPACE__
?res
!.
?r
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?0
!]
![
?1
!]
__SPACE__
!%=
__SPACE__
?res
!.
?r
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?1
!]
![
?0
!]
__SPACE__
!=
__SPACE__
?getRandomLong
!(
?0
!,
__SPACE__
?100
!)
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?1
!]
![
?1
!]
__SPACE__
!=
__SPACE__
?getRandomLong
!(
?0
!,
__SPACE__
?100
!)
!;
__SPACE__
?tps
!.
?println
!(
?join
!(
?res
!.
?a
![
?i
!]
![
?1
!]
!)
!)
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?1
!]
![
?0
!]
__SPACE__
!%=
__SPACE__
?res
!.
?r
!;
__SPACE__
?res
!.
?a
![
?i
!]
![
?1
!]
![
?1
!]
__SPACE__
!%=
__SPACE__
?res
!.
?r
!;
__SPACE__
?tps
!.
?println
!(
!)
!;
__SPACE__
!}
__SPACE__
?for
!(
?int
__SPACE__
?i
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?i
__SPACE__
!<
__SPACE__
?res
!.
?m
!;
__SPACE__
?i
!++
!)
__SPACE__
!{
__SPACE__
?res
!.
?lr
![
?i
!]
![
?0
!]
__SPACE__
!=
__SPACE__
?getRandomInt
!(
?1
!,
__SPACE__
?res
!.
?n
__SPACE__
!-
__SPACE__
?1
!)
!;
__SPACE__
?res
!.
?lr
![
?i
!]
![
?1
!]
__SPACE__
!=
__SPACE__
?getRandomInt
!(
?res
!.
?lr
![
?i
!]
![
?0
!]
!,
__SPACE__
?res
!.
?n
!)
!;
__SPACE__
?tps
!.
?println
!(
?join
!(
?res
!.
?lr
![
?i
!]
!)
!)
!;
__SPACE__
!}
__SPACE__
?return
__SPACE__
?res
!;
__SPACE__
!}
__SPACE__
?static
__SPACE__
?public
__SPACE__
?class
__SPACE__
?H
__SPACE__
!{
__SPACE__
?long
![
!]
![
!]
__SPACE__
?m
!;
__SPACE__
?@Override
__SPACE__
?public
__SPACE__
?String
__SPACE__
?toString
!(
!)
__SPACE__
!{
__SPACE__
?return
__SPACE__
?Arrays
!.
?stream
!(
?m
!)
!.
?map
!(
?v
__SPACE__
!->
__SPACE__
?join
!(
?v
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"/"
!,
__SPACE__
!"["
!,
__SPACE__
!"]"
!)
!)
!;
__SPACE__
!}
__SPACE__
!}
__SPACE__
!//    @Override
__SPACE__
?protected
__SPACE__
?void
__SPACE__
?test1
!(
?final
__SPACE__
?Object
__SPACE__
?input_data
!,
__SPACE__
?final
__SPACE__
?List
!<
?String
!>
__SPACE__
?output_data
!)
__SPACE__
!{
__SPACE__
?@SuppressWarnings
!(
!"unchecked"
!)
__SPACE__
?final
__SPACE__
?TesterInput
__SPACE__
?ti
__SPACE__
!=
__SPACE__
!(
?TesterInput
!)
?input_data
!;
__SPACE__
?H
![
!]
__SPACE__
?h1
__SPACE__
!=
__SPACE__
?new
__SPACE__
?H
![
!]
!{
?new
__SPACE__
?H
!(
!)
!,
__SPACE__
?new
__SPACE__
?H
!(
!)
!}
!;
__SPACE__
?h1
![
?0
!]
!.
?m
__SPACE__
!=
__SPACE__
?new
__SPACE__
?long
![
?2
!]
![
?2
!]
!;
__SPACE__
?h1
![
?1
!]
!.
?m
__SPACE__
!=
__SPACE__
?new
__SPACE__
?long
![
?2
!]
![
?2
!]
!;
__SPACE__
?for
!(
?int
__SPACE__
?i
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?i
__SPACE__
!<
__SPACE__
?ti
!.
?m
!;
__SPACE__
?i
!++
!)
__SPACE__
!{
__SPACE__
?int
__SPACE__
?selector
__SPACE__
!=
__SPACE__
?1
!;
__SPACE__
?h1
![
?1
!]
!.
?m
![
?0
!]
![
?0
!]
__SPACE__
!=
__SPACE__
?h1
![
?1
!]
!.
?m
![
?1
!]
![
?1
!]
__SPACE__
!=
__SPACE__
?1
!;
__SPACE__
?h1
![
?1
!]
!.
?m
![
?0
!]
![
?1
!]
__SPACE__
!=
__SPACE__
?h1
![
?1
!]
!.
?m
![
?1
!]
![
?0
!]
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?for
!(
?int
__SPACE__
?j
__SPACE__
!=
__SPACE__
?ti
!.
?lr
![
?i
!]
![
?0
!]
__SPACE__
!-
__SPACE__
?1
!;
__SPACE__
?j
__SPACE__
!<
__SPACE__
?ti
!.
?lr
![
?i
!]
![
?1
!]
!;
__SPACE__
?j
!++
!)
__SPACE__
!{
__SPACE__
?int
__SPACE__
?next
__SPACE__
!=
__SPACE__
?selector
!;
__SPACE__
?selector
__SPACE__
?^
!=
__SPACE__
?1
!;
__SPACE__
!//                h1[selector]
__SPACE__
?h1
![
?selector
!]
!.
?m
![
?0
!]
![
?0
!]
__SPACE__
!=
__SPACE__
!(
!(
?h1
![
?next
!]
!.
?m
![
?0
!]
![
?0
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?0
!]
![
?0
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
__SPACE__
!+
__SPACE__
!(
?h1
![
?next
!]
!.
?m
![
?0
!]
![
?1
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?1
!]
![
?0
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!;
__SPACE__
?h1
![
?selector
!]
!.
?m
![
?0
!]
![
?1
!]
__SPACE__
!=
__SPACE__
!(
!(
?h1
![
?next
!]
!.
?m
![
?0
!]
![
?0
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?0
!]
![
?1
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
__SPACE__
!+
__SPACE__
!(
?h1
![
?next
!]
!.
?m
![
?0
!]
![
?1
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?1
!]
![
?1
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!;
__SPACE__
?h1
![
?selector
!]
!.
?m
![
?1
!]
![
?0
!]
__SPACE__
!=
__SPACE__
!(
!(
?h1
![
?next
!]
!.
?m
![
?1
!]
![
?0
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?0
!]
![
?0
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
__SPACE__
!+
__SPACE__
!(
?h1
![
?next
!]
!.
?m
![
?1
!]
![
?1
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?1
!]
![
?0
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!;
__SPACE__
?h1
![
?selector
!]
!.
?m
![
?1
!]
![
?1
!]
__SPACE__
!=
__SPACE__
!(
!(
?h1
![
?next
!]
!.
?m
![
?1
!]
![
?0
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?0
!]
![
?1
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
__SPACE__
!+
__SPACE__
!(
?h1
![
?next
!]
!.
?m
![
?1
!]
![
?1
!]
__SPACE__
!*
__SPACE__
?ti
!.
?a
![
?j
!]
![
?1
!]
![
?1
!]
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!)
__SPACE__
!%
__SPACE__
?ti
!.
?r
!;
__SPACE__
!}
__SPACE__
?List
!<
?String
!>
__SPACE__
?data0
__SPACE__
!=
__SPACE__
?output_data
!.
?subList
!(
?0
!,
__SPACE__
?3
!)
!.
?stream
!(
!)
!.
?collect
!(
?Collectors
!.
?toList
!(
!)
!)
!;
__SPACE__
?int
__SPACE__
?ii
__SPACE__
!=
__SPACE__
?selector
!;
__SPACE__
?List
!<
?String
!>
__SPACE__
?data1
__SPACE__
!=
__SPACE__
?IntStream
!.
?range
!(
?0
!,
__SPACE__
?3
!)
!.
?mapToObj
!(
?i1
__SPACE__
!->
__SPACE__
?i1
__SPACE__
!<
__SPACE__
?2
__SPACE__
!?
__SPACE__
?join
!(
?h1
![
?ii
!]
!.
?m
![
?i1
!]
!)
__SPACE__
!:
__SPACE__
!""
!)
!.
?collect
!(
?Collectors
!.
?toList
!(
!)
!)
!;
__SPACE__
?output_data
!.
?remove
!(
?0
!)
!;
__SPACE__
?output_data
!.
?remove
!(
?0
!)
!;
__SPACE__
?output_data
!.
?remove
!(
?0
!)
!;
__SPACE__
?for
__SPACE__
!(
?int
__SPACE__
?j
__SPACE__
!=
__SPACE__
?0
!;
__SPACE__
?j
__SPACE__
!<
__SPACE__
?3
!;
__SPACE__
?j
!++
!)
__SPACE__
!{
__SPACE__
?if
__SPACE__
!(
!!
?data0
!.
?equals
!(
?data1
!)
!)
__SPACE__
!{
__SPACE__
?String
__SPACE__
?message
__SPACE__
!=
__SPACE__
?ti
!.
?r
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?ti
!.
?n
__SPACE__
!+
__SPACE__
!" "
__SPACE__
!+
__SPACE__
?ti
!.
?m
__SPACE__
!+
__SPACE__
!"\n"
__SPACE__
!+
__SPACE__
?Arrays
!.
?stream
!(
?ti
!.
?a
!)
!.
?map
!(
?v
__SPACE__
!->
__SPACE__
?Arrays
!.
?stream
!(
?v
!)
!.
?map
!(
?v1
__SPACE__
!->
__SPACE__
?join
!(
?v1
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n"
!)
!)
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n\n"
!)
!)
__SPACE__
!+
__SPACE__
!"\nl: "
__SPACE__
!+
__SPACE__
?ti
!.
?lr
![
?i
!]
![
?0
!]
__SPACE__
!+
__SPACE__
!", r: "
__SPACE__
!+
__SPACE__
?ti
!.
?lr
![
?i
!]
![
?1
!]
__SPACE__
!+
__SPACE__
!"\n"
__SPACE__
!+
__SPACE__
?data0
!.
?stream
!(
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n"
!)
!)
__SPACE__
!+
__SPACE__
!"' != '\n"
__SPACE__
!+
__SPACE__
?data1
!.
?stream
!(
!)
!.
?collect
!(
?Collectors
!.
?joining
!(
!"\n"
!)
!)
!;
__SPACE__
?throw
__SPACE__
?new
__SPACE__
?RuntimeException
!(
?message
!)
!;
__SPACE__
!}
__SPACE__
!}
__SPACE__
!}
__SPACE__
!}
__SPACE__
!/*-Preprocess-DONOTCOPY*/
__SPACE__
?static
__SPACE__
?public
__SPACE__
?void
__SPACE__
?main
!(
?String
![
!]
__SPACE__
?args
!)
__SPACE__
?throws
__SPACE__
?IOException
__SPACE__
!{
__SPACE__
?new
__SPACE__
?B5
!(
!)
!.
?run
!(
!)
!;
__SPACE__
!}
__SPACE__
!}
__SPACE__
